@inject UserConfig UserConfig
@inject NavigationManager navManager
<div class="card bg-base-300 shadow-lg">
        <div class="card-body">
        <h2 class="card-title">@Produto.Nome</h2>
        <p>Lote: @Produto.Lote</p>
        <div class="flex justify-between">
            <p>Validade: @Produto.Validade.ToLocalTime().ToShortDateString()</p>
            <EscolhedorDeIconeProduto Validade=Produto.Validade/>
        </div>
        <div class="card-actions justify-end gap-2">
            <button @onclick=editar class="btn btn-circle btn-outlined btn-primary"><svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" /></svg></button>
            <button @onclick=apagar class="btn btn-circle btn-outlined"><svg class="h-6 w-6 fill-primary" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>delete</title><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" /></svg></button>
        </div>
        </div>
    </div>



@code {
    [Parameter ,EditorRequired] 
    public required Produto Produto { get; set; }
    [Parameter, EditorRequired]
    public Func<string,Task> Deletar{get;set;}

    private async void apagar()
    {
        await Deletar(Produto.Id.ToString());
    }

    private void editar()
    {
        UserConfig.Produto = Produto;
        navManager.NavigateTo("/produto/adicionar");
    }
}
